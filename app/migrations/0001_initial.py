# Generated by Django 5.1.6 on 2025-02-08 01:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ShieldModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('total_hp', models.IntegerField()),
                ('size', models.IntegerField()),
                ('max_power_slots', models.IntegerField()),
                ('min_power_slots', models.IntegerField()),
                ('min_ballistic_resistance', models.FloatField()),
                ('max_ballistic_resistance', models.FloatField()),
                ('min_energy_resistance', models.FloatField()),
                ('max_energy_resistance', models.FloatField()),
                ('min_distortion_resistance', models.FloatField()),
                ('max_distortion_resistance', models.FloatField()),
                ('min_ballistic_absorption', models.FloatField()),
                ('max_ballistic_absorption', models.FloatField()),
                ('min_energy_absorption', models.FloatField()),
                ('max_energy_absorption', models.FloatField()),
                ('min_distortion_absorption', models.FloatField()),
                ('max_distortion_absorption', models.FloatField()),
                ('raw_data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='ShipModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('size', models.IntegerField()),
                ('shield_faces', models.IntegerField(choices=[(0, 'None'), (1, 'Bubble'), (2, 'FrontBack'), (3, 'Quadrant')])),
                ('pitch_rate', models.IntegerField()),
                ('vital_hull_hp', models.IntegerField()),
                ('vital_hull_name', models.CharField(max_length=64)),
                ('ballistic_resistance', models.FloatField()),
                ('energy_resistance', models.FloatField()),
                ('distortion_resistance', models.FloatField()),
                ('max_weapon_power', models.IntegerField()),
                ('raw_data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='WeaponModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('size', models.IntegerField()),
                ('fire_rate', models.IntegerField()),
                ('ammo_count', models.IntegerField()),
                ('accuracy', models.FloatField()),
                ('alpha_damage', models.FloatField()),
                ('damage_type', models.CharField(choices=[(1, 'Physical'), (2, 'Energy'), (3, 'Distortion')], max_length=32)),
                ('projectile_speed', models.IntegerField()),
                ('burst_duration', models.IntegerField()),
                ('burst_cooldown', models.IntegerField()),
                ('burst_dps', models.FloatField()),
                ('total_runtime', models.FloatField()),
                ('sustained_dps', models.FloatField()),
                ('raw_data', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('session_token', models.TextField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoadoutModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('identifier', models.CharField(max_length=16, unique=True)),
                ('name', models.CharField(max_length=64)),
                ('ship_name', models.CharField(max_length=64)),
                ('weapons_power_percentage', models.FloatField()),
                ('shields_power_percentage', models.FloatField()),
                ('weapons', models.JSONField()),
                ('shields', models.JSONField()),
                ('raw_data', models.JSONField()),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='loadouts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
